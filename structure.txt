social_trend_analysis/
│── dags/                     # Airflow DAG 스크립트 (크롤링/분석/적재 파이프라인)
│   ├── fetch_twitter.py       # Twitter 크롤링 DAG
│   ├── fetch_instagram.py     # Instagram 크롤링 DAG
│   ├── fetch_reddit.py        # Reddit 크롤링 DAG
│   ├── preprocess_data.py     # 데이터 전처리 DAG
│   ├── analyze_trends.py      # 감성 분석 및 트렌드 분석 DAG
│   ├── pipeline.py            # 전체 파이프라인 DAG
│
│── src/                      # 크롤러 및 데이터 처리 코드
│   ├── crawler/
│   │   ├── twitter_crawler.py  # Twitter API 크롤러
│   │   ├── instagram_crawler.py # Instagram 크롤러 (Selenium 활용)
│   │   ├── reddit_crawler.py    # Reddit 크롤러
│   │
│   ├── preprocessing/
│   │   ├── clean_text.py       # 텍스트 전처리 (중복제거, 필터링)
│   │   ├── language_filter.py  # 언어 감지 및 한국어 필터링
│   │
│   ├── analysis/
│   │   ├── sentiment_analysis.py # 감성 분석 (KoBERT, TextBlob 활용)
│   │   ├── trend_analysis.py     # 트렌드 변화 분석
│   │
│── database/                  # PostgreSQL 관련 설정 및 쿼리
│   ├── schema.sql              # DB 테이블 스키마
│   ├── db_connection.py        # PostgreSQL 연결 설정
│   ├── insert_data.py          # 데이터 적재 코드
│
│── dashboard/                  # 데이터 시각화 (Streamlit, Plotly)
│   ├── app.py                   # Streamlit 기반 대시보드
│   ├── charts.py                # 시각화 관련 코드
│
│── config/                     # 설정 파일
│   ├── config.yaml              # API 키 및 환경 변수 설정
│   ├── logging.yaml             # 로깅 설정
│
│── tests/                      # 테스트 코드
│   ├── test_crawler.py          # 크롤러 테스트
│   ├── test_preprocessing.py    # 전처리 테스트
│   ├── test_analysis.py         # 분석 기능 테스트
│
│── requirements.txt            # 필요한 패키지 목록
│── docker-compose.yml          # PostgreSQL 및 Airflow 환경 구성
│── README.md                   # 프로젝트 설명